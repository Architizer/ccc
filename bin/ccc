#!/usr/bin/env python

"""
Utility script to test and troubleshoot ccc
"""

import argparse
import os
import json
import requests
from ccc import index_in_solr, lookup, get
from ccc.formatter import Formatter

PARSER = argparse.ArgumentParser(prog='ccc')
PARSER.add_argument('command', help="""
  [install [index, ...], index-domain [example.com, ..], page-count [example.com, ...]
""")
PARSER.add_argument('extras', nargs='+', help='ccc help')
PARSER.print_help()
INDEX = os.environ.get('INDEX', 'CC-MAIN-2016-40')


if __name__ == "__main__":
    ARGS = PARSER.parse_args()
    if ARGS.command == 'install':
        for collection in ARGS.extras:
            s3_host = 'https://s3.amazonaws.com'
            collection_path = 'commoncrawl/cc-index/collections'
            local_dir = 'collections'
            for filename in ['metadata.yaml', 'indexes/cluster.idx']:
                print('{}/{}/{}'.format(s3_host, collection_path, filename))
                r = requests.get('{}/{}/{}/{}'.format(s3_host,
                                                      collection_path,
                                                      collection,
                                                      filename))
                print(r)
                filenamepath = '{}/{}/{}'.format(local_dir, collection, filename)
                if not os.path.exists(os.path.dirname(filenamepath)):
                    os.makedirs(os.path.dirname(filenamepath))
                with open(filenamepath, 'w') as f:
                    f.write(r.text)

    elif ARGS.command == 'print-documentfields':
        domain = ARGS.extras[0]

        for record in lookup(INDEX, domain):
            page = get(json.loads(''.join(record.split(' ')[2:])))
            formatter = Formatter(domain)
            document = formatter.get_document(page)
            import hashlib
            d = hashlib.md5()
            d.update(document['text'].encode('utf-8'))
            print(d.hexdigest())
            print(document['WARC-Payload-Digest'])
            print(document['WARC-Target-URI'])
            #print(','.join(document.keys()))

    elif ARGS.command == 'inspect-documentfields':
        domain = ARGS.extras[0]
        fields= ARGS.extras[1:]

        for record in lookup(INDEX, domain):
            page = get(json.loads(''.join(record.split(' ')[2:])))
            formatter = Formatter(domain)
            document = formatter.get_document(page)
            print(','.join([document.get(field, 'N/A') for field in fields]))

    elif ARGS.command == 'index-domain':
        for domain in ARGS.extras:
            index_in_solr(domain)

    elif ARGS.command == 'page-count':
        for domain in ARGS.extras:
            print('{}, {}\r\n'.format(domain, len([page for page in lookup(INDEX, domain)])))
